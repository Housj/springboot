<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--  引入属性文件，在配置中占位使用 -->
<context:property-placeholder location="classpath:jdbc.properties"/>
    <!--  设置druid中log4j日志的纪录级别，结果集输出 -->
<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
    <property name="resultSetLogEnabled" value="true"/>
</bean>
    <!--  配置druid数据源 -->
<bean name="datasource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <property name="initialSize" value="${jdbc.initialSize}" />
    <property name="minIdle" value="${jdbc.minIdle}" />
    <property name="maxActive" value="${jdbc.maxActive}" />
    <property name="maxWait" value="${jdbc.maxWait}" />
    <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
    <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
    <property name="validationQuery" value="${jdbc.validationQuery}" />
    <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
    <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
    <property name="testOnReturn" value="${jdbc.testOnReturn}" />
    <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
    <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
    <!--	    <property name="logAbandoned" value="${jdbc.logAbandoned}" /> -->
    <property name="filters" value="${jdbc.filters}" />
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true" />
    <property name="proxyFilters">
        <list>
            <ref bean="log-filter"/>
        </list>
    </property>
</bean>
    <!-- 会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.hsj.model"></property>
        <!--sql映射文件路径-->
        <property name="mapperLocations">
            <list>
                <value>classpath:/mapper/*Mapper.xml</value>
            </list>
        </property>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!--自动扫描对象关系映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定会话工厂，如果当前上下文中只定义一个则该属性可省去-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--指定自动扫描接口的基础包，实现接口-->
        <property name="basePackage" value="com.hsj.dao"></property>
    </bean>

    <!--5 声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"></property>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*"/>
            <tx:method name="add*"/>
            <tx:method name="delete*"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="myPointcut" expression="execution(public * com.hsj.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut"/>
    </aop:config>

    <!--&lt;!&ndash;支持注解驱动的事务管理，指定事务管理器 &ndash;&gt;-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--&lt;!&ndash;容器自动扫描IOC组件&ndash;&gt;-->
    <!--<context:component-scan base-package="com.hsj.model"></context:component-scan>-->
    <!--&lt;!&ndash;aspectj支持自动代理实现AOP功能&ndash;&gt;-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>-->


    <!--<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
        <!--&lt;!&ndash; 指定数据源 &ndash;&gt;-->
        <!--<property name="dataSource" ref="datasource"/>-->
        <!--&lt;!&ndash; 指定Entity实体类包路径 &ndash;&gt;-->
        <!--<property name="packagesToScan">-->
            <!--<list>-->
                <!--<value>com.hsj.model</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--&lt;!&ndash; 指定JPA属性；如Hibernate中指定是否显示SQL的是否显示、方言等 &ndash;&gt;-->
        <!--<property name="jpaVendorAdapter">-->
            <!--<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">-->
                <!--&lt;!&ndash; 是否生成ddl文件 &ndash;&gt;-->
                <!--<property name="generateDdl" value="true"/>-->
                <!--&lt;!&ndash; 是否展示sql &ndash;&gt;-->
                <!--<property name="showSql" value="false"/>-->
                <!--&lt;!&ndash; 必要的数据库库使用的详细信息 &ndash;&gt;-->
                <!--<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>-->
                <!--&lt;!&ndash; mysql,自行选择 &ndash;&gt;-->
                <!--<property name="database" value="MYSQL"/>-->
            <!--</bean>-->
        <!--</property>-->
        <!--<property name="jpaProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy-->
                <!--</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <!--<prop key="hibernate.enable_lazy_load_no_trans">true</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; Spring Data Jpa配置 &ndash;&gt;-->
    <!--&lt;!&ndash; 配置 启用扫描并自动创建代理的功能  factory-class="com.monk.base.jpa.PeakJpaRepositoryFactory"自己定义的bean注解方式，可以不写，直接注解所有包下的 &ndash;&gt;-->
    <!--<jpa:repositories base-package="com.hsj.repository" transaction-manager-ref="txManager" entity-manager-factory-ref="entityManagerFactory"/>-->

    <!--&lt;!&ndash; Jpa 事务配置 &ndash;&gt;-->
    <!--<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">-->
        <!--<property name="entityManagerFactory" ref="entityManagerFactory"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 开启注解事务 &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />-->

</beans>